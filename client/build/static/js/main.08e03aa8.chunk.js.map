{"version":3,"sources":["reducers/index.js","actions/types.js","reducers sync nonrecursive //.js$","reducers/auth.js","reducers/error.js","reducers/item.js","actions/errorActions.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavBar.js","actions/itemActions.js","components/ShoppingList.js","components/ItemModal.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Reducers","reqReducers","require","keys","filter","file","indexOf","forEach","end","name","substr","default","combineReducers","Object","_Users_wenyukuang_Desktop_learning_react_mern_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","map","./auth.js","./error.js","./index.js","./item.js","webpackContext","req","id","webpackContextResolve","e","Error","code","resolve","module","exports","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","state","arguments","length","undefined","_ref","type","payload","setItem","removeItem","r","_actions_types__WEBPACK_IMPORTED_MODULE_0__","msg","status","_ref2","items","loading","action","_Users_wenyukuang_Desktop_learning_react_mern_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","_Users_wenyukuang_Desktop_learning_react_mern_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","item","_id","returnErrors","clearErrors","getToken","getState","auth","headers","Content-Type","x-auth-token","RegisterModal","modal","email","password","toggle","_this","props","setState","onChange","evt","_evt$target","target","value","defineProperty","onSubmit","preventDefault","_this$state","newUser","register","prevProps","_this$props","this","error","react_default","a","createElement","Container","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","login","Logout","logout","react","AppNavBar","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","auth_Logout","auth_RegisterModal","auth_LoginModal","setItemsLoading","ShoppingList","onDeleteClick","deleteItem","getItems","_this2","List","react_transition_group","key","timeout","classNames","ListGroupItem","size","ListGroup","get","options","delete","ItemModal","addItem","marginBottom","middlewares","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_AppNavBar","components_ItemModal","components_ShoppingList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08e03aa8.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nconst Reducers = {};\nconst reqReducers = require.context('.', false, /\\.js$/);\n\nreqReducers.keys()\n   .filter( file => (\n      (file !== '.DS_Store') && \n      (file !== '_notes') && \n      (file.indexOf('.js') !== -1) &&\n      (file !== './index.js') \n   ))\n   .forEach( file => {\n      const end = file.indexOf('.js') - 2;\n      const name = file.substr( 2, end )\n      Reducers[name] = reqReducers(file).default\n   })\n\n// console.log( Reducers )\n\nexport default combineReducers({\n   ...Reducers\n})","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","var map = {\n\t\"./auth.js\": 82,\n\t\"./error.js\": 83,\n\t\"./index.js\": 28,\n\t\"./item.js\": 84\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81;","import {\n   USER_LOADED,\n   USER_LOADING,\n   AUTH_ERROR,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOGOUT_SUCCESS,\n   REGISTER_SUCCESS,\n   REGISTER_FAIL\n } from '../actions/types';\n\n const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n };\n\n export default function( state = initialState, { type, payload }) {\n   \n   payload = payload || state.user;\n\n   switch(type) {\n      case USER_LOADING:\n         return { ...state, isLoading: true };\n      case USER_LOADED:\n         return { ...state, user: payload, isAuthenticated: true, isLoading: false };\n      case LOGIN_SUCCESS: \n      case REGISTER_SUCCESS:\n         localStorage.setItem('token', payload.token);\n         return { ...state, ...payload, isAuthenticated: true, isLoading: false };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n      case REGISTER_FAIL:\n         localStorage.removeItem('token');\n         return { ...state, token: null, isAuthenticated: null, isLoading: false, user: null };\n      default:\n         return state;\n   }\n }","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\n\nconst initialState = {\n   msg: {},\n   status: null,\n   id: null\n}\n\nexport default function( state = initialState, { type, payload }) {\n\n   const { msg, status, id } = payload ? payload : state;\n\n   switch(type) {\n      case GET_ERRORS:\n         return { msg, status, id };\n      case CLEAR_ERRORS: \n         return { msg:{}, status: null, id: null };\n      default:\n         return state;\n   }\n}","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\n\nconst initialState = {\n   items: [],\n   loading: false\n};\n\nexport default function(state = initialState, action) {\n   switch(action.type) {\n      case GET_ITEMS:\n         return {\n            ...state,\n            items: action.payload,\n            loading: false\n         };\n      case ADD_ITEM:\n         return {\n            ...state,\n            items: [action.payload, ...state.items]\n         };\n      case DELETE_ITEM:\n         return {\n            ...state,\n            items: state.items.filter( item => item._id !== action.payload )\n         };\n      case ITEMS_LOADING:\n         return {\n            ...state,\n            loading: true\n         };\n      default:\n         return state;\n   }\n}","import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n\n// Retrun Errors\nexport const returnErrors = (msg, status, id = null) => {\n   return {\n      type: GET_ERRORS,\n      payload: { msg, status, id }\n   };\n}\n\nexport const clearErrors = () => {\n   return {\n      type: CLEAR_ERRORS\n   };\n}","import axios from 'axios';\nimport {\n   USER_LOADED,\n   USER_LOADING,\n   AUTH_ERROR,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOGOUT_SUCCESS,\n   REGISTER_SUCCESS,\n   REGISTER_FAIL\n } from './types';\n\n import { returnErrors } from './errorActions';\n\n // Check token and load user\n export const loadUser = () => (dispatch, getState) => {\n\n   // User loading\n   dispatch({ type: USER_LOADING });\n\n   // Get token from localStorage\n   const options = getToken(getState);\n\n   // Headers\n   axios.get('/api/auth/user', options)\n   .then( res => dispatch({ type: USER_LOADED, payload: res.data }) )\n   .catch( err => {\n      dispatch( returnErrors(err.response.data, err.response.status) )   \n      dispatch({ type: AUTH_ERROR }) \n   })\n}\n\nexport const register = ({ name, email, password }) => dispatch => {\n   const config = {\n      headers: {\n         \"Content-Type\": \"application/json\"\n      }\n   }\n\n   const body = JSON.stringify({ name, email, password })\n\n   axios.post('/api/users', body, config)\n   .then( res => dispatch({ type: REGISTER_SUCCESS, payload: res.data }) )\n   .catch( err => {\n      dispatch( returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL') ) \n      dispatch({ type: REGISTER_FAIL })\n   })\n}\n\nexport const login = ({ email, password }) => dispatch => {\n   const config = {\n      headers: {\n         \"Content-Type\": \"application/json\"\n      }\n   }\n\n   const body = JSON.stringify({ email, password })\n\n   axios.post('/api/auth', body, config)\n   .then( res => dispatch({ type: LOGIN_SUCCESS, payload: res.data }) )\n   .catch( err => {\n      dispatch( returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL') ) \n      dispatch({ type: LOGIN_FAIL })\n   })\n}\n\nexport const logout = () => ({ type: LOGOUT_SUCCESS });\n\nexport const getToken = getState => {\n   const token = getState().auth.token;\n   const headers = token ? {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token\n   } : { \"Content-Type\": \"application/json\" };\n\n   return { headers };\n}\n\n ","import React, { Component } from 'react';\nimport { \n   Container, Button, Modal, ModalHeader, ModalBody, \n   Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass RegisterModal extends Component {\n   state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n   }\n\n   static propTypes = {\n      isAuthenticated: PropTypes.bool,\n      error: PropTypes.object.isRequired,\n      register: PropTypes.func.isRequired,\n      clearErrors: PropTypes.func.isRequired\n   }\n\n   componentDidUpdate(prevProps) {\n      const { error, isAuthenticated } = this.props;\n      if(error !== prevProps.error) {\n         error.id === 'REGISTER_FAIL' ? this.setState({ msg: error.msg.msg }) : this.setState({ msg: null })\n      }\n\n      this.state.modal && isAuthenticated && this.toggle()\n   }\n\n   toggle = () => {\n      this.props.clearErrors();\n      this.setState({ modal: !this.state.modal })\n   }\n\n   onChange = evt => {\n      const { name, value } = evt.target;   \n      this.setState({ [name]: value })\n   }\n\n   onSubmit = evt => {\n      evt.preventDefault();\n      \n      const { name, email, password } = this.state;\n      const newUser = { name, email, password };\n      \n      this.props.register(newUser)\n   }\n\n   render() {\n      const { toggle, onSubmit, onChange, state } = this;\n      const { modal, msg } = state;\n\n      return(\n         <Container>\n            <NavLink onClick={toggle} href=\"#\">Register</NavLink>\n            \n            <Modal isOpen={modal} toggle={toggle} >\n               <ModalHeader toggle={toggle}>\n                  Register\n               </ModalHeader>\n\n               <ModalBody>\n                  {\n                     msg ? (\n                        <Alert color=\"danger\">{msg}</Alert>\n                     ) : null\n                  }\n                  <Form onSubmit={onSubmit}>\n                     <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"id\"\n                           placeholder=\"Name\"\n                           className=\"mb-3\"\n                           onChange={onChange}\n                        />\n\n                        <Label for=\"email\">Email</Label>\n                        <Input\n                           type=\"email\"\n                           name=\"email\"\n                           id=\"email\"\n                           placeholder=\"Email\"\n                           className=\"mb-3\"\n                           onChange={onChange}\n                        />\n\n                        <Label for=\"password\">Password</Label>\n                        <Input\n                           type=\"password\"\n                           name=\"password\"\n                           id=\"password\"\n                           placeholder=\"Password\"\n                           className=\"mb-3\"\n                           onChange={onChange}\n                        />\n                        <Button color=\"dark\" style={{ marginTop: \"15px\" }} block>Register</Button>\n                     </FormGroup>\n                  </Form>\n               </ModalBody>\n            </Modal>\n         </Container>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({ \n   isAuthenticated: state.auth.isAuthenticated, \n   error: state.error \n})\n\nexport default connect(mapStateToProps, { register, clearErrors })(RegisterModal);","import React, { Component } from 'react';\nimport { \n   Container, Button, Modal, ModalHeader, ModalBody, \n   Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n   state = {\n      modal: false,\n      email: '',\n      password: '',\n      msg: null\n   }\n\n   static propTypes = {\n      isAuthenticated: PropTypes.bool,\n      error: PropTypes.object.isRequired,\n      login: PropTypes.func.isRequired,\n      clearErrors: PropTypes.func.isRequired\n   }\n\n   componentDidUpdate(prevProps) {\n      const { error, isAuthenticated } = this.props;\n      if(error !== prevProps.error) {\n         error.id === 'LOGIN_FAIL' ? this.setState({ msg: error.msg.msg }) : this.setState({ msg: null })\n      }\n\n      this.state.modal && isAuthenticated && this.toggle()\n   }\n\n   toggle = () => {\n      this.props.clearErrors();\n      this.setState({ modal: !this.state.modal })\n   }\n\n   onChange = evt => {\n      const { name, value } = evt.target;   \n      this.setState({ [name]: value })\n   }\n\n   onSubmit = evt => {\n      evt.preventDefault();\n      \n      const { email, password } = this.state;\n      const newUser = { email, password };\n      \n      this.props.login(newUser)\n   }\n\n   render() {\n      const { toggle, onSubmit, onChange, state } = this;\n      const { modal, msg } = state;\n\n      return(\n         <Container>\n            <NavLink onClick={toggle} href=\"#\">Login</NavLink>\n            \n            <Modal isOpen={modal} toggle={toggle} >\n               <ModalHeader toggle={toggle}>\n                  Login\n               </ModalHeader>\n\n               <ModalBody>\n                  {\n                     msg ? (\n                        <Alert color=\"danger\">{msg}</Alert>\n                     ) : null\n                  }\n                  <Form onSubmit={onSubmit}>\n                     <FormGroup>\n\n                        <Label for=\"email\">Email</Label>\n                        <Input\n                           type=\"email\"\n                           name=\"email\"\n                           id=\"email\"\n                           placeholder=\"Email\"\n                           className=\"mb-3\"\n                           onChange={onChange}\n                        />\n\n                        <Label for=\"password\">Password</Label>\n                        <Input\n                           type=\"password\"\n                           name=\"password\"\n                           id=\"password\"\n                           placeholder=\"Password\"\n                           className=\"mb-3\"\n                           onChange={onChange}\n                        />\n                        <Button color=\"dark\" style={{ marginTop: \"15px\" }} block>Log in</Button>\n                     </FormGroup>\n                  </Form>\n               </ModalBody>\n            </Modal>\n         </Container>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({ \n   isAuthenticated: state.auth.isAuthenticated, \n   error: state.error \n})\n\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/authActions';\n\n\nclass Logout extends Component {\n   \n   static propTypes = {\n      logout: PropTypes.func.isRequired\n   }\n\n   render() {\n      const { logout } = this.props\n\n      return (\n         <Fragment>\n            <NavLink onClick={logout} href=\"#\">Logout</NavLink>     \n         </Fragment>\n      )\n   }\n}\n\nexport default connect(null, { logout })(Logout);","import React, { Component, Fragment } from 'react';\nimport {\n   Collapse,\n   Navbar,\n   NavbarToggler,\n   NavbarBrand,\n   Nav,\n   NavItem,\n   Container\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\n\nclass AppNavBar extends Component {\n   state = {\n      isOpen: false\n   }\n\n   static propTypes = {\n      auth: PropTypes.object.isRequired\n   }\n   \n   toggle = () => this.setState({ isOpen: !this.state.isOpen })\n\n   render() {\n      const { state, props } = this;\n      const { toggle, isOpen } = state;\n      const { auth } = props;\n      const { user, isAuthenticated } = auth;\n\n      return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n               <Container>\n                  <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\n                  <NavbarToggler onClick={toggle} />\n                  \n                  <Collapse isOpen={isOpen} navbar>\n                     <Nav className=\"ml-auto\" navbar>\n                        {\n                           isAuthenticated ? (\n                              <Fragment>\n                                 <NavItem>\n                                    <span className=\"navbar-text mr-3\" style={{color: 'white'}}>Welcome {user.name}</span>\n                                 </NavItem>\n                                 <NavItem> <Logout /> </NavItem>\n                              </Fragment>\n                           ) : (\n                              <Fragment>\n                                 <NavItem> <RegisterModal /> </NavItem>\n                                 <NavItem> <LoginModal /> </NavItem>\n                              </Fragment>\n                           )\n                        }\n                     </Nav>\n                  </Collapse>\n               </Container>\n            </Navbar>\n         </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({ \n   auth: state.auth \n})\n\nexport default connect(mapStateToProps, null)(AppNavBar);","import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport { getToken } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getItems = () => dispatch => {\n   dispatch( setItemsLoading() )\n   \n   axios.get('/api/items').then( res => {\n      dispatch({ type: GET_ITEMS, payload: res.data }) \n   })\n   .catch(err => returnErrors(err.response.data, err.response.status) )\n};\n\n\nexport const addItem = (item) => (dispatch, getState) => {\n   const options = getToken(getState);\n\n   axios.post('/api/items', item, options).then( res => {\n      dispatch({ type: ADD_ITEM, payload: res.data }) \n   })\n   .catch(err => returnErrors(err.response.data, err.response.status) )\n};\n\n\nexport const deleteItem = id => (dispatch, getState) => {\n   const options = getToken(getState);\n\n   axios.delete(`/api/items/${id}`, options).then( res => {\n      dispatch({ type: DELETE_ITEM, payload: id })  \n   })\n   .catch(err => returnErrors(err.response.data, err.response.status) )\n};\n\n\nexport const setItemsLoading = () => {\n   return {\n      type: ITEMS_LOADING\n   }\n}","import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems, deleteItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\n\nclass ShoppingList extends Component {\n\n   static propTypes = {\n      getItems: PropTypes.func.isRequired,\n      deleteItem: PropTypes.func.isRequired,\n      item: PropTypes.object.isRequired,\n      isAuthenticated: PropTypes.bool\n   }\n   \n   componentDidMount() {\n      this.props.getItems();\n   }\n\n   onDeleteClick = id => this.props.deleteItem(id)\n\n   render() {\n      const { item: { items }, isAuthenticated } = this.props;\n\n      const List = items.map( ({ _id, name }) => (\n         <CSSTransition key={_id} timeout={750} classNames=\"fade\">\n            <ListGroupItem>\n               {\n                  isAuthenticated ? (\n                     <Button \n                        className=\"remove-btn\" \n                        color=\"danger\" \n                        size=\"sm\"\n                        onClick={ () => this.onDeleteClick(_id) }\n                     > &times; </Button>\n                  ) : null\n               }\n               {name} \n            </ListGroupItem>\n         </CSSTransition>\n      ));\n      \n      return (\n         <Container>\n            <ListGroup>\n               <TransitionGroup className=\"shopping-list\">\n                  { List }\n               </TransitionGroup>               \n            </ListGroup>\n         </Container>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({ \n   item: state.item,\n   isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList);\n\n\n\n\n","import React, { Component } from 'react';\nimport { Container, Button, Modal, ModalHeader,  ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ItemModal extends Component {\n   state = {\n      modal: false,\n      name: ''\n   }\n\n   static propTypes = {\n      addItem: PropTypes.func.isRequired,\n      item: PropTypes.object.isRequired,\n      isAuthenticated: PropTypes.bool\n   }\n\n   toggle= () => this.setState({ modal: !this.state.modal })\n\n   onChange = evt => {\n      const { name, value } = evt.target;   \n      this.setState({ [name]: value })\n   }\n\n   onSubmit = evt => {\n      evt.preventDefault();\n      \n      const item = { name: this.state.name };\n      \n      this.props.addItem(item);\n      this.toggle();\n   }\n\n   render() {\n      const { isAuthenticated } = this.props;\n      return(\n         <Container>\n            {\n               isAuthenticated ? (\n                  <Button color=\"dark\" style={{ marginBottom: '15px' }} onClick={this.toggle} >\n                     Add Item\n                  </Button>\n               ) : (\n                  <h4 className=\"mb-3\">Please log in to manage items</h4>\n               )\n            }\n            \n\n            <Modal isOpen={this.state.modal} toggle={this.toggle} >\n               <ModalHeader toggle={this.toggle}>\n                  Add to Shopping List\n               </ModalHeader>\n\n               <ModalBody>\n                  <Form onSubmit={this.onSubmit}>\n                     <FormGroup>\n                        <Label for=\"item\">Item</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"item\"\n                           placeholder=\"Add shopping item\"\n                           onChange={this.onChange}\n                        />\n                        <Button color=\"dark\" style={{ marginTop: \"15px\" }} block>Add Item</Button>\n                     </FormGroup>\n                  </Form>\n               </ModalBody>\n            </Modal>\n         </Container>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({ \n   item: state.item,\n   isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middlewares = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n   applyMiddleware(...middlewares),\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;\n","// Vendor imports\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\n// Developer imports\nimport AppNavBar from './components/AppNavBar';\nimport ShoppingList from './components/ShoppingList';\nimport ItemModal from './components/ItemModal';\nimport store from './store'\nimport { loadUser } from './actions/authActions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    store.dispatch( loadUser() );\n  }\n\n  render() {\n    return (\n      <Provider store={store} >\n        <div className=\"App\">\n          <AppNavBar />\n          <ItemModal />\n          <ShoppingList />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}